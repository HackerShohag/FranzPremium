name: Build and Release

on:
  push:
    branches:
    - '**'

# env:
#   APPLEID: ${{ secrets.APPLEID }}
#   APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
#   GH_TOKEN: ${{ secrets.FRANZ_TOKEN }}
#   CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1
        with:
            fetch-depth: 0

      - name: Set Current Version as Environment Variable
        run: |
            echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
          cache: "npm"

      - name: Install dependencies
        run: |
          npm i -g lerna@3.8
          npx lerna bootstrap

      - name: Build App
        run: npm run build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-build-artifacts
          path: |
            out/*.AppImage
            out/*.deb
            out/latest-linux.yml

      - name: Release Artifacts
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.FRANZ_TOKEN }}"
          automatic_release_tag: "v${{ env.VERSION }}"
          prerelease: false
          title: "Premium Edition (${{ env.VERSION }})"
          files: |
            out/*.AppImage
            out/*.deb
            out/latest-linux.yml

  windows:
    runs-on: windows-2019
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Set Current Version as Environment Variable
        run: |
          Foreach ($version in jq -r .version package.json) {echo "VERSION=$version" >> $env:GITHUB_ENV }

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.0
          cache: "npm"

      - name: Install dependencies
        run: |
          npm i -g lerna@3.8
          npx lerna bootstrap

      - name: Build App
        run: npm run build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-build-artifacts
          path: |
            out/*.exe
            out/latest.yml

      - name: Release Artifacts
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.FRANZ_TOKEN }}
        with:
          file: out/*.exe; out/latest.yml
          tags: false
          draft: false
          update_latest_release: true

  # macOS:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v1
  #       with:
  #         fetch-depth: 0

  #     - name: Install Node.js, NPM and Yarn
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16.14.0
  #         cache: "npm"

  #     - name: Install dependencies
  #       run: |
  #         npm i -g lerna@3.8
  #         npx lerna bootstrap

  #     - name: Build App
  #       run: npm run build

  #     - name: Upload Artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: macOS-build-artifacts
  #         path: |
  #             out/*.dmg
  #             out/*.mac.zip.blockmap
  #             out/latest-mac.yml

  #     - name: Release Artifacts
  #       uses: "HackerShohag/action-automatic-releases@latest"
  #       with:
  #         repo_token: "${{ secrets.FRANZ_TOKEN }}"
  #         automatic_release_tag: "latest-mac"
  #         prerelease: false
  #         title: "Premium Edition (macOS)"
  #         files: |
  #             out/*.dmg
  #             out/*.mac.zip.blockmap
  #             out/latest-mac.yml
